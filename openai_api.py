import os
import json
from dotenv import load_dotenv
from openai import OpenAI

# === –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∑–º—ñ–Ω–Ω–∏—Ö —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞ ===
load_dotenv()
OPENAI_API_KEY = os.getenv("OPENAI_API_KEY")

# === –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –∫–ª—ñ—î–Ω—Ç–∞ OpenAI ===
client = OpenAI(api_key=OPENAI_API_KEY) if OPENAI_API_KEY else None

# === –®–ª—è—Ö –¥–æ —É—Ä–æ–∫—ñ–≤ –∑ —Ñ—ñ–¥–±–µ–∫—É ===
FEEDBACK_LESSONS_PATH = "data/feedback_lessons.json"

# --- –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —É—Ä–æ–∫—ñ–≤ –∑ —Ñ—ñ–¥–±–µ–∫—ñ–≤ --- #
def load_feedback_lessons(path=FEEDBACK_LESSONS_PATH):
    if not os.path.exists(path):
        return []
    try:
        with open(path, "r", encoding="utf-8") as f:
            lessons = json.load(f)
            return [l["advice"] for l in lessons if "advice" in l]
    except Exception as e:
        print(f"‚ö†Ô∏è –ù–µ –≤–¥–∞–ª–æ—Å—è –∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ —É—Ä–æ–∫–∏ —Ñ—ñ–¥–±–µ–∫—É: {e}")
        return []

# --- –ü–µ—Ä–µ—Ñ–æ—Ä–º—É–ª—é–≤–∞–Ω–Ω—è –ø–æ–≥–∞–Ω–æ—ó –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ --- #
def improve_reply(original_reply: str, context: str = "") -> dict:
    """
    –ü–æ–≤–µ—Ä—Ç–∞—î —Å–ª–æ–≤–Ω–∏–∫ –∑ –ø–æ–ª—è–º–∏:
    - old: –ø–æ—á–∞—Ç–∫–æ–≤–∞ –≤—ñ–¥–ø–æ–≤—ñ–¥—å
    - new: –ø–æ–∫—Ä–∞—â–µ–Ω–∞ –≤—ñ–¥–ø–æ–≤—ñ–¥—å
    - comment: —á–æ–º—É —Ü—è –≤—ñ–¥–ø–æ–≤—ñ–¥—å –∫—Ä–∞—â–∞ (–æ–ø—Ü—ñ–æ–Ω–∞–ª—å–Ω–æ)
    """
    if not client:
        return {
            "old": original_reply,
            "new": "",
            "comment": "‚ö†Ô∏è API –∫–ª—é—á –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ. –ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ .env —Ñ–∞–π–ª."
        }

    lessons = load_feedback_lessons()
    lessons_text = "\n".join(f"‚Ä¢ {l}" for l in lessons)

    system_msg = (
        "–¢–∏ —Ä–µ–¥–∞–∫—Ç–æ—Ä –≤—ñ–¥–ø–æ–≤—ñ–¥–µ–π AI –±–æ—Ç–∞ –≤ HR-—Å—Ñ–µ—Ä—ñ. "
        "–ü–æ–∫—Ä–∞—â—É–π –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ —Ç–∞–∫, —â–æ–± –≤–æ–Ω–∏ –±—É–ª–∏ –≤–≤—ñ—á–ª–∏–≤–∏–º–∏, —Å—Ç—Ä—É–∫—Ç—É—Ä–æ–≤–∞–Ω–∏–º–∏ —Ç–∞ –∑—Ä–æ–∑—É–º—ñ–ª–∏–º–∏. "
        "–ù–µ –≤–∏–≥–∞–¥—É–π –Ω–æ–≤–æ—ó —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó, –ª–∏—à–µ –ø–æ–∫—Ä–∞—â—É–π —Å—Ç–∏–ª—å.\n"
    )
    if lessons_text:
        system_msg += f"\n–û—Å—å —É—Ä–æ–∫–∏, —è–∫—ñ —Ç—Ä–µ–±–∞ –≤—Ä–∞—Ö–æ–≤—É–≤–∞—Ç–∏:\n{lessons_text}"

    user_msg = (
        "–û—Å—å –≤—ñ–¥–ø–æ–≤—ñ–¥—å –±–æ—Ç–∞, —è–∫–∞ –±—É–ª–∞ –Ω–µ–¥–æ—Ä–µ—á–Ω–æ—é –∞–±–æ —Å–ª–∞–±–∫–æ—é. "
        "–í–∏–ø—Ä–∞–≤ —ó—ó —Ç–∞ –ø–æ—è—Å–Ω–∏, —á–æ–º—É —Ç–≤–æ—è –≤—ñ–¥–ø–æ–≤—ñ–¥—å –∫—Ä–∞—â–∞.\n"
    )
    if context:
        user_msg += f"\n–ö–æ–Ω—Ç–µ–∫—Å—Ç: {context.strip()}\n"
    user_msg += f"\n–û—Ä–∏–≥—ñ–Ω–∞–ª: {original_reply.strip()}\n\n–ù–æ–≤–∏–π –≤–∞—Ä—ñ–∞–Ω—Ç:\n"

    user_msg += "\n---\n–ü—ñ—Å–ª—è –Ω–æ–≤–æ–≥–æ –≤–∞—Ä—ñ–∞–Ω—Ç—É –æ–±–æ–≤‚Äô—è–∑–∫–æ–≤–æ –Ω–∞–ø–∏—à–∏ –∫–æ—Ä–æ—Ç–∫–∏–π –∫–æ–º–µ–Ω—Ç–∞—Ä, —á–æ–º—É –≤—ñ–¥–ø–æ–≤—ñ–¥—å —Å—Ç–∞–ª–∞ –∫—Ä–∞—â–æ—é.\n"

    try:
        response = client.chat.completions.create(
            model="gpt-4o",
            messages=[
                {"role": "system", "content": system_msg},
                {"role": "user", "content": user_msg}
            ],
            temperature=0.4,
            max_tokens=400
        )

        full_output = response.choices[0].message.content.strip()

        # –†–æ–∑–¥—ñ–ª–µ–Ω–Ω—è –ø–æ–∫—Ä–∞—â–µ–Ω–æ—ó –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ —Ç–∞ –∫–æ–º–µ–Ω—Ç–∞—Ä—è
        if "\n\n–ü—Ä–∏—á–∏–Ω–∞:" in full_output:
            new_text, comment = full_output.split("\n\n–ü—Ä–∏—á–∏–Ω–∞:", 1)
        elif "\n–ü—Ä–∏—á–∏–Ω–∞:" in full_output:
            new_text, comment = full_output.split("\n–ü—Ä–∏—á–∏–Ω–∞:", 1)
        else:
            parts = full_output.strip().split("\n\n", 1)
            new_text = parts[0].strip()
            comment = parts[1].strip() if len(parts) > 1 else ""

        return {
            "old": original_reply.strip(),
            "new": new_text.strip(),
            "comment": comment.strip()
        }

    except Exception as e:
        return {
            "old": original_reply,
            "new": "",
            "comment": f"‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞: {e}"
        }

# --- –¢–µ—Å—Ç–æ–≤–∏–π –∑–∞–ø—É—Å–∫ --- #
if __name__ == "__main__":
    example_bad = "–Ω—É —è —Ö–∑, –Ω–∞–ø–µ–≤–Ω–æ —Ç–∏ —Ç—É–ø–∏–π —è–∫—â–æ –Ω–µ –ø–æ–Ω—è–≤"
    example_context = "–ö–∞–Ω–¥–∏–¥–∞—Ç –∑–∞–ø–∏—Ç–∞–≤ –ø—Ä–æ –æ–ø–ª–∞—Ç—É –ø—Ä–∞—Ü—ñ."
    result = improve_reply(example_bad, context=example_context)
    print("üì• –°—Ç–∞—Ä–∞:", result["old"])
    print("üì§ –ù–æ–≤–∞:", result["new"])
    print("üìù –ö–æ–º–µ–Ω—Ç–∞—Ä:", result["comment"])
