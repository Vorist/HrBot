# build_good_index.py

import os
import json
import numpy as np
import faiss
import sys
from openai import OpenAI

sys.path.append(os.path.dirname(os.path.abspath(__file__)) + "/..")

from config import OPENAI_API_KEY, GOOD_DIALOGS_PATH, GOOD_INDEX_PATH

# --- üîë –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è OpenAI-–∫–ª—ñ—î–Ω—Ç–∞ ---
client = OpenAI(api_key=OPENAI_API_KEY)

# --- üì• –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è good-—Ñ—Ä–∞–≥–º–µ–Ω—Ç—ñ–≤ ---
def load_good_chunks():
    if not os.path.exists(GOOD_DIALOGS_PATH):
        print(f"‚ùå –§–∞–π–ª –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ: {GOOD_DIALOGS_PATH}")
        return []

    chunks = []
    with open(GOOD_DIALOGS_PATH, "r", encoding="utf-8") as f:
        for i, line in enumerate(f, 1):
            line = line.strip()
            if not line:
                continue
            try:
                item = json.loads(line)
                text = item.get("text", "").strip()
                if text:
                    chunks.append(text)
            except json.JSONDecodeError:
                print(f"‚ö†Ô∏è –ù–µ–∫–æ—Ä–µ–∫—Ç–Ω–∏–π JSON —É —Ä—è–¥–∫—É {i}")
    return chunks

# --- üß† –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –µ–º–±–µ–¥—ñ–Ω–≥—ñ–≤ ---
def embed_texts(texts):
    try:
        print(f"üì° –ì–µ–Ω–µ—Ä—É—î–º–æ embedding-–∏ –¥–ª—è {len(texts)} good-—Ñ—Ä–∞–≥–º–µ–Ω—Ç—ñ–≤...")
        response = client.embeddings.create(
            model="text-embedding-3-small",
            input=texts
        )
        vectors = []
        for i, rec in enumerate(response.data):
            vec = np.array(rec.embedding, dtype=np.float32)
            if vec.shape[0] == 1536:
                vectors.append(vec)
            else:
                print(f"‚ö†Ô∏è –ï–º–±–µ–¥—ñ–Ω–≥ {i+1} –º–∞—î –Ω–µ–∫–æ—Ä–µ–∫—Ç–Ω—É —Ä–æ–∑–º—ñ—Ä–Ω—ñ—Å—Ç—å ‚Äî –ø—Ä–æ–ø—É—â–µ–Ω–æ")
        return vectors
    except Exception as e:
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü—ñ—ó –µ–º–±–µ–¥—ñ–Ω–≥—ñ–≤: {e}")
        return []

# --- üß± –ü–æ–±—É–¥–æ–≤–∞ FAISS-—ñ–Ω–¥–µ–∫—Å—É ---
def build_good_index():
    texts = load_good_chunks()
    if not texts:
        print("‚ö†Ô∏è –ù–µ–º–∞—î –≤–∞–ª—ñ–¥–Ω–∏—Ö good-—Ñ—Ä–∞–≥–º–µ–Ω—Ç—ñ–≤.")
        return

    embeddings = embed_texts(texts)
    if not embeddings:
        print("‚ö†Ô∏è –ù–µ –≤–¥–∞–ª–æ—Å—è —Å—Ç–≤–æ—Ä–∏—Ç–∏ –µ–º–±–µ–¥—ñ–Ω–≥–∏.")
        return

    dim = embeddings[0].shape[0]
    index = faiss.IndexFlatL2(dim)
    index.add(np.array(embeddings))

    os.makedirs(os.path.dirname(GOOD_INDEX_PATH), exist_ok=True)
    faiss.write_index(index, GOOD_INDEX_PATH)
    print(f"‚úÖ –ó–±–µ—Ä–µ–∂–µ–Ω–æ —ñ–Ω–¥–µ–∫—Å –∑ {len(embeddings)} good-—Ñ—Ä–∞–≥–º–µ–Ω—Ç—ñ–≤ ‚Üí {GOOD_INDEX_PATH}")

# --- üöÄ –ó–∞–ø—É—Å–∫ ---
if __name__ == "__main__":
    build_good_index()
