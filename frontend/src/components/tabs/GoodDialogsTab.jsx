// frontend/src/components/tabs/GoodDialogsTab.jsx
import React, { useEffect, useState } from 'react';
import axios from 'axios';
import './GoodDialogsTab.css';

export default function GoodDialogsTab() {
  const [dialogs, setDialogs] = useState([]);
  const [expandedIndex, setExpandedIndex] = useState(null);
  const [comments, setComments] = useState({});

  useEffect(() => {
    fetchDialogs();
  }, []);

  const fetchDialogs = async () => {
    try {
      const response = await axios.get('/api/good_dialogs');
      setDialogs(response.data);
    } catch (error) {
      console.error('–ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Ö–æ—Ä–æ—à–∏—Ö –¥—ñ–∞–ª–æ–≥—ñ–≤:', error);
    }
  };

  const handleToggle = (index) => {
    setExpandedIndex(index === expandedIndex ? null : index);
  };

  const handleCommentChange = (index, value) => {
    setComments({ ...comments, [index]: value });
  };

  const markAsBad = async (index) => {
    try {
      await axios.post('/api/good_dialogs/feedback', {
        index,
        comment: comments[index] || ''
      });
      setDialogs(dialogs.filter((_, i) => i !== index));
    } catch (error) {
      console.error('–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ —Ñ—ñ–¥–±–µ—Ü—ñ:', error);
    }
  };

  const confirmGood = async (index) => {
    try {
      await axios.post('/api/good_dialogs/confirm', { index });
    } catch (error) {
      console.error('–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—ñ —Ö–æ—Ä–æ—à–æ–≥–æ –¥—ñ–∞–ª–æ–≥—É:', error);
    }
  };

  return (
    <div className="good-tab">
      <h2>‚úÖ –•–æ—Ä–æ—à—ñ –¥—ñ–∞–ª–æ–≥–∏</h2>
      <div className="dialog-list">
        {dialogs.map((dialog, index) => (
          <div key={index} className="dialog-card">
            <div className="card-header" onClick={() => handleToggle(index)}>
              üë§ {dialog.user || '–ö–∞–Ω–¥–∏–¥–∞—Ç'}, {dialog.date || '–¥–∞—Ç–∞ –Ω–µ–≤—ñ–¥–æ–º–∞'}
            </div>

            {expandedIndex === index && (
              <div className="card-body">
                <div className="dialog-content">
                  {dialog.dialog.map((line, i) => (
                    <div key={i} className="dialog-line">
                      <strong>{line.role === 'user' ? 'üë§' : 'ü§ñ'}</strong> {line.text}
                    </div>
                  ))}
                </div>

                <textarea
                  placeholder="üí¨ –ö–æ–º–µ–Ω—Ç–∞—Ä –º–µ–Ω–µ–¥–∂–µ—Ä–∞..."
                  value={comments[index] || ''}
                  onChange={(e) => handleCommentChange(index, e.target.value)}
                />

                <div className="button-group">
                  <button className="bad" onClick={() => markAsBad(index)}>‚ùå –ü–æ–∑–Ω–∞—á–∏—Ç–∏ —è–∫ –ø–æ–≥–∞–Ω–∏–π</button>
                  <button className="confirm" onClick={() => confirmGood(index)}>‚úÖ –ó–∞–ª–∏—à–∏—Ç–∏ —è–∫ —Ö–æ—Ä–æ—à–∏–π</button>
                </div>
              </div>
            )}
          </div>
        ))}
      </div>
    </div>
  );
}
