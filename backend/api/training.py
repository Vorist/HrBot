from fastapi import APIRouter, Response, HTTPException
from typing import Optional, List
import subprocess

router = APIRouter()

# --- –ö–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—è --- #
TRAINER_DIR = "trainer"
TIMEOUT = 300  # 5 —Ö–≤–∏–ª–∏–Ω

ALLOWED_SCRIPTS = {
    "train_from_good.py",
    "train_from_bad.py",
    "feedback_processor.py",
    "training.py",
}


def run_script(script_name: str, args: Optional[List[str]] = None) -> Response:
    """
    –ó–∞–ø—É—Å–∫–∞—î Python-—Å–∫—Ä–∏–ø—Ç –∑ trainer/ –∑ –Ω–µ–æ–±–æ–≤'—è–∑–∫–æ–≤–∏–º–∏ –∞—Ä–≥—É–º–µ–Ω—Ç–∞–º–∏.
    """
    if script_name not in ALLOWED_SCRIPTS:
        raise HTTPException(status_code=400, detail=f"‚õî –°–∫—Ä–∏–ø—Ç {script_name} –Ω–µ –¥–æ–∑–≤–æ–ª–µ–Ω–∏–π")

    command = ["python", f"{TRAINER_DIR}/{script_name}"]
    if args:
        command.extend(args)

    try:
        print(f"üîß –ó–∞–ø—É—Å–∫: {' '.join(command)}")

        result = subprocess.run(
            command,
            capture_output=True,
            text=True,
            timeout=TIMEOUT
        )

        output = result.stdout.strip()
        errors = result.stderr.strip()

        if result.returncode == 0:
            print("‚úÖ –ù–∞–≤—á–∞–Ω–Ω—è –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø—ñ—à–Ω–æ")
            return Response(content=output, status_code=200, media_type="text/plain")
        else:
            print("‚ùå –ù–∞–≤—á–∞–Ω–Ω—è –∑–∞–≤–µ—Ä—à–∏–ª–æ—Å—å –∑ –ø–æ–º–∏–ª–∫–æ—é")
            return Response(
                content=f"‚ö†Ô∏è –ù–∞–≤—á–∞–Ω–Ω—è –∑–∞–≤–µ—Ä—à–µ–Ω–æ –∑ –∫–æ–¥–æ–º {result.returncode}\n\nSTDOUT:\n{output}\n\nSTDERR:\n{errors}",
                status_code=500,
                media_type="text/plain"
            )

    except subprocess.TimeoutExpired:
        return Response(
            content=f"‚è∞ –ß–∞—Å –≤–∏–∫–æ–Ω–∞–Ω–Ω—è —Å–∫—Ä–∏–ø—Ç–∞ {script_name} –ø–µ—Ä–µ–≤–∏—â–µ–Ω–æ ({TIMEOUT} —Å–µ–∫)",
            status_code=500,
            media_type="text/plain"
        )

    except Exception as e:
        return Response(
            content=f"‚ùå –ù–µ–≤—ñ–¥–æ–º–∞ –ø–æ–º–∏–ª–∫–∞ –∑–∞–ø—É—Å–∫—É {script_name}: {str(e)}",
            status_code=500,
            media_type="text/plain"
        )


# --- API –º–∞—Ä—à—Ä—É—Ç–∏ –Ω–∞–≤—á–∞–Ω–Ω—è --- #

@router.post("/api/training/good")
def train_from_good():
    """–ù–∞–≤—á–∞–Ω–Ω—è –Ω–∞ good_dialogs"""
    return run_script("train_from_good.py")


@router.post("/api/training/bad")
def train_from_bad():
    """–ù–∞–≤—á–∞–Ω–Ω—è –Ω–∞ bad_dialogs"""
    return run_script("train_from_bad.py")


@router.post("/api/training/feedback")
def train_from_feedback():
    """–ù–∞–≤—á–∞–Ω–Ω—è –∑ —É—Ä–∞—Ö—É–≤–∞–Ω–Ω—è–º —Ñ—ñ–¥–±–µ–∫—ñ–≤"""
    return run_script("feedback_processor.py")


@router.post("/api/training/real")
def train_from_real():
    """–ù–∞–≤—á–∞–Ω–Ω—è –Ω–∞ —Ä–µ–∞–ª—å–Ω–∏—Ö –¥—ñ–∞–ª–æ–≥–∞—Ö"""
    return run_script("training.py", ["real"])


@router.post("/api/training/all")
def train_all():
    """–ü–æ–≤–Ω–µ –Ω–∞–≤—á–∞–Ω–Ω—è –Ω–∞ –≤—Å—ñ—Ö –¥–∂–µ—Ä–µ–ª–∞—Ö"""
    return run_script("training.py", ["all"])
